{"version":3,"sources":["../src/ctrl.js"],"names":["panelDefaults","legend","show","position","chartType","labelOrientation","orientation","avgLineShow","labelSpace","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","aliasColors","format","valueName","strokeWidth","fontSize","fontColor","marginTop","marginLeft","marginBottom","marginRight","paddingWidth","paddingHeight","colorSet","colorSch","GroupedBarChartCtrl","$scope","$injector","$rootScope","hiddenSeries","data","_","defaults","panel","events","on","onInitEditMode","bind","onDataReceived","onDataError","addEditorTab","subItem","value","render","forEach","d","push","color","dataList","length","o","groupBy","rows","e","forOwn","i","t","sta","sum","tid","map","s","reduce","x","y","res","label","decimalInfo","getDecimalsForValue","formatFunc","kbn","valueFormats","decimals","scaledDecimals","scope","elem","attrs","ctrl","groupedBarChart","opts","margin","width","height","showLegend","legendType","axesConfig","element","find","options","Set","c","r","concat","Object","keys","filter","k","avgList","stackVal","valores","name","d3","scale","ordinal","range","category20","draw","select","html","svg","append","attr","style","top","createScales","addAxes","addTooltips","addBar","addLegend","y0","rangeRoundBands","y1","linear","x0","x1","axesScale","xAxis","axis","tickSize","orient","yAxis","domain","rangeBand","chartScale","domainCal","max","xAxisConfig","left","call","selectAll","match","yAxisConfig","bar","enter","barC","text","tips","elements","elementData","__data__","display","loc","defaultOptions","slice","reverse","onRender","Chart","parseInt","bottom","right","MetricsPanelCtrl","templateUrl"],"mappings":"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","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport * as d3 from './external/d3.v3.min';\nimport './css/groupedBarChart.css!';\n\nconst panelDefaults = {\n    legend: {\n        show: true,\n        position: 'On graph',\n    },\n    chartType: 'stacked bar chart',\n    labelOrientation: 'horizontal',\n    orientation: 'vertical',\n    avgLineShow: true,\n    labelSpace: 40,\n    links: [],\n    datasource: null,\n    maxDataPoints: 3,\n    interval: null,\n    targets: [{}],\n    cacheTimeout: null,\n    nullPointMode: 'connected',\n    aliasColors: {},\n    format: 'short',\n    valueName: 'current',\n    strokeWidth: 1,\n    fontSize: '80%',\n    fontColor: '#fff',\n    marginTop: 0,\n    marginLeft: 40,\n    marginBottom: 0,\n    marginRight: 0,\n    paddingWidth: 40,\n    paddingHeight: 80,\n    colorSet: [],\n    colorSch: []\n};\n\nexport class GroupedBarChartCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector, $rootScope) {\n        super($scope, $injector);\n        this.$rootScope = $rootScope;\n        this.hiddenSeries = {};\n        this.data = null;\n\n        _.defaults(this.panel, panelDefaults);\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/grafana-groupedbarchart-panel/partials/editor.html', 2);\n        this.addEditorTab('Colors', 'public/plugins/grafana-groupedbarchart-panel/partials/colors.html', 3);\n    }\n\n    setUnitFormat(subItem) {\n        this.panel.format = subItem.value;\n        this.render();\n    }\n\n    onDataError() {\n        this.render();\n    }\n\n    updateColorSet() {\n        this.panel.colorSch = [];\n        this.panel.colorSet.forEach(d => this.panel.colorSch.push(d.color));\n        this.render();\n    }\n\n    onDataReceived(dataList) {\n        if (dataList && dataList.length) {\n            let o = _.groupBy(dataList[0].rows, e => e[0]);\n            _.forOwn(o, (e, i) => {\n                let t = _.groupBy(e, sta => sta[1]);\n                o[i] = _.forOwn(t, (sum, tid) => {t[tid] = sum.map(s => s[2]).reduce((x,y) => x+y)})\n            });\n\n            let res = [];\n            _.forOwn(o, (e, i) => {\n                e.label = i;\n                res.push(e);\n            });\n            this.data = res;//.sort((a, b) => {return (a.label>b.label)?-1:((b.label>a.label)?1:0)});\n        } else {\n            this.data = [\n                {label:\"Machine001\", \"Off\":15, \"Down\":50, \"Run\": 0, \"Idle\":40},\n                {label:\"Machine002\", \"Off\":15, \"Down\":5, \"Run\":40, \"Idle\":15},\n                {label:\"Machine003\", \"Off\":15, \"Down\":30, \"Run\":40, \"Idle\":15},\n                {label:\"Machine004\", \"Off\":15, \"Down\":30, \"Run\":80, \"Idle\":15}\n            ];\n        }\n\n        this.render();\n    }\n\n    formatValue(value) {\n        let decimalInfo = this.getDecimalsForValue(value);\n        let formatFunc = kbn.valueFormats[this.panel.format];\n        if (formatFunc) {\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        }\n        return value;\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        class groupedBarChart {\n            constructor(opts) {\n                this.data = opts.data;\n                this.margin = opts.margin;\n                this.width = opts.width;\n                this.height = opts.height;\n                this.showLegend = opts.legend;\n                this.legendType = opts.position;\n                this.chartType = opts.chartType;\n                this.orientation = opts.orientation;\n                this.labelSpace = opts.labelSpace;\n                this.fontColor = opts.fontColor;\n                this.labelOrientation = opts.labelOrientation;\n                this.avgLineShow = opts.avgLineShow;\n                this.axesConfig = [];\n                this.element = elem.find(opts.element)[0];\n                this.options = [...new Set(opts.data.reduce((c, r) => c.concat(Object.keys(r).filter(k => k !== 'label')), []))];\n                this.avgList = {};\n                this.options.forEach(d => {this.avgList[d] = 0});\n                this.options = this.options.filter(d => d!=='valores');\n                this.data.forEach(d => {\n                    let stackVal = 0;\n                    d.valores = this.options.map((name, i, o) => {\n                        if (i !== 0) stackVal = stackVal + (+d[o[i-1]]);\n                        this.avgList[name] = this.avgList[name] + d[name];\n                        return {name: name, value: +d[name], stackVal: stackVal};\n                    });\n                });\n                this.options.forEach(d => {\n                    this.avgList[d] /= this.data.length;\n                });\n                if (opts.color.length == 0) {\n                    this.color = d3.scale.ordinal()\n                        .range(d3.scale.category20().range());\n                } else {\n                    this.color = d3.scale.ordinal()\n                        .range(opts.color);\n                }\n\n                this.draw();\n            }\n\n            draw() {\n                d3.select(this.element).html(\"\");\n                this.svg = d3.select(this.element).append('svg');\n                this.svg.attr('width', this.width)\n                    .attr('height', this.height)\n                    // .attr('viewBox', `0, 0, ${this.width}, ${this.height}`)\n                    .attr('preserveAspectRatio', 'xMinYMin meet')\n                    .style('padding', '10px')\n                    .attr('transform', `translate(0, ${this.margin.top})`);\n\n                this.createScales();\n                this.addAxes();\n                this.addTooltips();\n                this.addBar();\n                d3.select(this.element).attr('style', `width: ${this.width*1.5}px; height: ${this.height*1.5}px`);\n                if (this.showLegend) this.addLegend(this.legendType);\n            }\n\n            createScales() {\n                switch(this.orientation) {\n                    case 'horizontal':\n                        this.y0 = d3.scale.ordinal()\n                            .rangeRoundBands([+this.height, 0], .2, 0.5);\n\n                        this.y1 = d3.scale.ordinal();\n\n                        this.x = d3.scale.linear()\n                            .range([0, +this.width]);\n                        this.axesConfig = [this.x, this.y0, this.y0, this.y1, this.x];\n                        break;\n                    case 'vertical':\n                        this.x0 = d3.scale.ordinal()\n                            .rangeRoundBands([0, +this.width], .2, 0.5);\n\n                        this.x1 = d3.scale.ordinal();\n\n                        this.y = d3.scale.linear()\n                            .range([0, +this.height]);\n\n                        this.axesConfig = [this.x0, this.y, this.x0, this.x1, this.y];\n                        break;\n                }\n\n            }\n\n            addAxes() {\n                let axesScale = 1.1;\n                this.xAxis = d3.svg.axis()\n                    .scale(this.axesConfig[0])\n                    .tickSize(-this.height)\n                    .orient('bottom');\n\n                this.yAxis = d3.svg.axis()\n                    .scale(this.axesConfig[1])\n                    .orient('left');\n\n                this.axesConfig[2].domain(this.data.map(d => { return d.label; }));\n                this.axesConfig[3].domain(this.options).rangeRoundBands([0, this.axesConfig[2].rangeBand()]);\n\n                let chartScale = (this.chartType === 'bar chart') ? 0 : 1;\n                let domainCal = (this.orientation === 'horizontal')\n                    ? [0, d3.max(this.data, function(d) { return d3.max(d.valores, d => { return (d.value + chartScale*d.stackVal)*axesScale; }); })]\n                    : [d3.max(this.data, function(d) { return d3.max(d.valores, d => { return (d.value + chartScale*d.stackVal)*axesScale; }); }), 0];\n                this.axesConfig[4].domain(domainCal);\n\n                let xAxisConfig = this.svg.append('g')\n                    .attr('class', 'x axis')\n                    .attr('transform', `translate(${this.margin.left}, ${this.height + this.margin.top})`)\n                    .call(this.xAxis)\n                    .selectAll('text')\n                    .style('fill', `${this.fontColor}`)\n\n                var match = this.labelOrientation.match(/^([1-9]\\d*) degrees\\b|^vertical$/);\n                if (match) {\n                    xAxisConfig.style('text-anchor', 'end').style('transform', 'rotate(-' + (match[1] || 90) + 'deg)');\n                }\n\n                let yAxisConfig = this.svg.append('g')\n                    .attr('class', 'y axis')\n                    .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                    .style('fill', `${this.fontColor}`)\n                    .call(this.yAxis)\n\n                yAxisConfig.selectAll('text')\n                    .style('fill', `${this.fontColor}`);\n                yAxisConfig.selectAll('path')\n                    .style('stroke', `${this.fontColor}`);\n\n            }\n\n            addBar() {\n                let scale = (this.chartType === 'bar chart') ? 1 : this.options.length;\n                switch(this.orientation) {\n                    case 'horizontal':\n                        this.avgLineShow && this.options.forEach(d => {\n                            this.svg.append('line')\n                                .attr('x1', this.x(this.avgList[d]))\n                                .attr('y1', this.height)\n                                .attr('x2', this.x(this.avgList[d]))\n                                .attr('y2', 0)\n                                .attr('class', `${d} avgLine`)\n                                .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                                .style('display', 'none')\n                                .style('stroke-width', 2)\n                                .style('stroke', this.color(d))\n                                .style('stroke-opacity', 0.7);\n                        });\n\n                        this.bar = this.svg.selectAll('.bar')\n                            .data(this.data)\n                            .enter().append('g')\n                            .attr('class', 'rect')\n                            .attr('transform', d => {\n                                return `translate(${this.margin.left}, ${this.y0(d.label) + this.margin.top})`;\n                            });\n\n                        this.barC = this.bar.selectAll('rect')\n                            .data(d => { return d.valores; })\n                            .enter();\n\n\n                        this.barC.append('rect')\n                            .attr('height', this.y1.rangeBand()*scale)\n                            .attr('y', d => {\n                                return (this.chartType === 'bar chart') ? this.y1(d.name) : this.y0(d.label);\n                            })\n                            .attr('x', d => {\n                                return (this.chartType === 'bar chart') ? 0 : this.x(d.stackVal);\n                            })\n                            .attr('value', d => { return d.name;})\n                            .attr('width', (d) => { return this.x(d.value);})\n                            .style('fill', d => { return this.color(d.name);});\n\n                        break;\n                    case 'vertical':\n                        this.avgLineShow && this.options.forEach(d => {\n                            this.svg.append('line')\n                                .attr('x1', 0)\n                                .attr('y1', this.y(this.avgList[d]))\n                                .attr('x2', +this.width)\n                                .attr('y2', this.y(this.avgList[d]))\n                                .attr('class', `${d} avgLine`)\n                                .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                                .style('display', 'none')\n                                .style('stroke-width', 2)\n                                .style('stroke', this.color(d))\n                                .style('stroke-opacity', 0.7)\n                        });\n\n                        this.bar = this.svg.selectAll('.bar')\n                            .data(this.data)\n                            .enter().append('g')\n                            .attr('class', 'rect')\n                            .attr('transform', (d, i) => {\n                                return `translate(${this.x0(d.label)}, ${+this.height + this.margin.top})`;\n                            });\n\n                        this.barC = this.bar.selectAll('rect')\n                            .data(d => { return d.valores.map(e => { e.label = d.label; return e;}); })\n                            .enter();\n\n                        this.barC.append('rect')\n                            .attr('id', (d, i) => { return `${d.label}_${i}`;})\n                            .attr('height', d => { return +this.height - this.y(d.value);})\n                            .attr('y', d => {\n                                return (this.chartType === 'bar chart') ? this.y(d.value) - this.height :  (this.y(d.value) - 2*(+this.height) + this.y(d.stackVal));\n                            })\n                            .attr('x', (d, i) => {\n                                return (this.chartType === 'bar chart') ? this.x1(d.name) + this.margin.left : this.x1(d.name) - this.x1.rangeBand()*i + this.margin.left;\n                            })\n                            .attr('value', d => { return d.name;})\n                            .attr('width', this.x1.rangeBand()*scale)\n                            .style('fill', d => { return this.color(d.name);});\n\n                        break;\n                }\n\n                (this.chartType === 'bar chart') && this.barC.append('text')\n                    .attr('x', d => {\n                        return (this.orientation === 'horizontal')\n                        ? this.x(d.value) +5\n                        : this.x1(d.name) + this.x1.rangeBand()/4 + this.margin.left;\n                    })\n                    .attr('y', d => {\n                        return (this.orientation === 'horizontal')\n                        ? this.y1(d.name) +(this.y1.rangeBand()/2)\n                        : this.y(d.value) - this.height -8;\n                    })\n                    .attr('dy', '.35em')\n                    .style('fill', `${this.fontColor}`)\n                    .text(d => { return d.value ? d.value : ''; });\n\n                this.bar.on('mouseover', d => {\n                    this.tips.style('left', `${10}px`);\n                    this.tips.style('top', `${15}px`);\n                    this.tips.style('display', \"inline-block\");\n                    let elements = d3.selectAll(':hover')[0];\n                    let elementData = elements[elements.length-1].__data__;\n                    this.tips.html(`${d.label} , ${elementData.name} ,  ${elementData.value}`);\n                    if (this.avgLineShow) d3.selectAll(`.${elementData.name}`)[0][0].style.display = '';\n                });\n\n                this.bar.on('mouseout', d => {\n                    this.tips.style('display', \"none\");\n                    d3.selectAll('.avgLine')[0].forEach(d => {\n                       d.style.display = 'none';\n                    });\n                });\n            }\n\n            addLegend(loc) {\n                let labelSpace = this.labelSpace;\n                switch(loc) {\n                    case 'On graph':\n                        let defaultOptions = (this.chartType == 'bar chart' || this.orientation == 'horizontal') ? this.options.slice(): this.options.slice().reverse();\n                        this.legend = this.svg.selectAll('.legend')\n                            .data(defaultOptions)\n                            .enter().append('g')\n                            .attr('class', 'legend')\n                            .attr('transform', (d, i) => { return `translate(50,${i*20 + this.margin.top})`; });\n\n                        this.legend.append('rect')\n                            .attr('x', this.width*1.1 - 18)\n                            .attr('width', 18)\n                            .attr('height', 18)\n                            .style('fill', this.color);\n\n                        this.legend.append('text')\n                            .attr('x', this.width*1.1 - 24)\n                            .attr('y', 9)\n                            .attr('dy', '.35em')\n                            .style('text-anchor', 'end')\n                            .style('fill', `${this.fontColor}`)\n                            .text(d => { return d; });\n                        break;\n                    case 'Under graph':\n                        this.legend = this.svg.selectAll('.legend')\n                            .data(this.options.slice())\n                            .enter().append('g')\n                            .attr('class', 'legend')\n                            .attr('transform', (d, i) => { return `translate(${+i*labelSpace - this.width},${+this.height + 24 + this.margin.top})`; });\n\n                        this.legend.append('rect')\n                            .attr('x', (d, i) => { return (i*labelSpace + this.margin.left + this.width*1 +0);})\n                            .attr('width', 18)\n                            .attr('height', 18)\n                            .style('fill', this.color);\n\n                        this.legend.append('text')\n                            .attr('x', (d, i) => { return (i*labelSpace + this.margin.left + this.width*1) +5; })\n                            .attr('dx', 18)\n                            .attr('dy', '1.1em')\n                            .style('text-anchor', 'start')\n                            .style('fill', `${this.fontColor}`)\n                            .text(d => { return d; });\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            addTooltips() {\n                this.tips = d3.select(this.element).append('div')\n                    .attr('class', 'toolTip');\n            }\n        }\n\n        function onRender() {\n            if(!ctrl.data) return;\n            var Chart = new groupedBarChart({\n                data: ctrl.data,\n                margin: {top: parseInt(ctrl.panel.marginTop, 10), left: parseInt(ctrl.panel.marginLeft, 10), bottom: parseInt(ctrl.panel.marginBottom, 10), right: parseInt(ctrl.panel.marginRight, 10) },\n                element: '#chart',\n                width: elem.width()-parseInt(ctrl.panel.paddingWidth, 10),\n                height: ctrl.height-parseInt(ctrl.panel.paddingHeight, 10),\n                legend: ctrl.panel.legend.show,\n                fontColor: ctrl.panel.fontColor,\n                position: ctrl.panel.legend.position,\n                chartType: ctrl.panel.chartType,\n                orientation: ctrl.panel.orientation,\n                labelOrientation: ctrl.panel.labelOrientation,\n                labelSpace: ctrl.panel.labelSpace,\n                avgLineShow: ctrl.panel.avgLineShow,\n                color: ctrl.panel.colorSch\n            });\n\n            ctrl.panel.colorSet = [];\n            Chart.options.forEach(d => {\n                ctrl.panel.colorSet.push({text: d, color: Chart.color(d)});\n            });\n        }\n\n        this.events.on('render', function() {\n            onRender();\n        });\n    }\n}\n\nGroupedBarChartCtrl.templateUrl = 'partials/module.html';\n"],"file":"ctrl.js"}